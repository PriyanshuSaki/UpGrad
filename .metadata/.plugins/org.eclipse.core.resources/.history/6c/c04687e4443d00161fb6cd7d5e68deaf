package com.utils;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;

public class ExcelReader {

	String sheetName1;
	String filename ;


	public  List<?> readExcel(String fileName, String sheetName) throws Exception {  

		List<?> list=   readExcelMain("resources/", "movies.xslx");

		return list;
	}         


	public  List<?> readExcelMain(String filePath, String fileName) throws Exception {

		filename = filePath+fileName;
		int  noOfRows=0;

		//System.out.println("sheetname is "+sheetName1);

		List sheetData = new ArrayList();
		FileInputStream fis = null;
		try {
			fis = new FileInputStream(filename);
			XSSFWorkbook workbook = new XSSFWorkbook(fis);
			XSSFSheet sheet = workbook.getSheet(sheetName1);
			Iterator rows = sheet.rowIterator();
			while (rows.hasNext()) {
				XSSFRow row = (XSSFRow) rows.next();
				Iterator cells = row.cellIterator();
				List data = new ArrayList();
				while (cells.hasNext()) {
					XSSFCell cell = (XSSFCell) cells.next();
					data.add(cell);
				}
				sheetData.add(data);
				noOfRows++;

			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (fis != null) {
				fis.close();
			}
		}
		List<String> resultList= new ArrayList<String>();
		
		
		
		for (int i = 1; i < sheetData.size(); i++) {
			List list = (List) sheetData.get(i);
			int colNo = 1;
			for (int j = 0; j < list.size(); j++, colNo++) {
				XSSFCell cell = (XSSFCell) list.get(j);
				String cellValue = getCellValue(cell);
			}
		}
		
		
		
		
		
		
		
		
		
		return	resultList;
	}



	public  String getCellValue(Cell cell) {
		String cellValue = null;
		if (cell.getCellType() == Cell.CELL_TYPE_BOOLEAN) {

			cellValue = String.valueOf(cell.getBooleanCellValue()); }
		else if (cell.getCellType() == Cell.CELL_TYPE_NUMERIC)
		{

			if (DateUtil.isCellDateFormatted(cell)) {
				cellValue = String.valueOf(cell.getDateCellValue());
				// System.out.println("Date :"+cell.getDateCellValue()+ "\t\t");
			} else {
				//	        	  cellValue = String.valueOf(cell.getNumericCellValue());
				cellValue = String.valueOf(new Double(cell.getNumericCellValue()).intValue());
				// System.out.println("Numeric  "+cell.getNumericCellValue()+ "\t\t");
			}

		}
		else if (cell.getCellType() == Cell.CELL_TYPE_FORMULA) {
			cellValue = (String.valueOf(cell.getCellFormula())); }
		else if (cell.getCellType() == Cell.CELL_TYPE_STRING) {
			cellValue = cell.getStringCellValue(); }
		else if (cell.getCellType() == Cell.CELL_TYPE_ERROR) {
			cellValue = String.valueOf(cell.getErrorCellValue()); }
		else {
			cellValue = ""; }

		return cellValue;
	}

}
